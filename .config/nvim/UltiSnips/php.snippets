snippet _form_textfield "Drupal Form API Textfield element" s
$form['$1'] = [
  '#type' => 'textfield',
	'#title' => $this->t('$2'),
	'#description' => $this->t('$3'),
	'#default_value' => $4,
	${5:'#required' => TRUE,}
];
$0
endsnippet

snippet _form_textarea "Drupal Form API Textarea element" s
$form['$1'] = [
  '#type' => 'textarea',
	'#title' => $this->t('$2'),
	'#description' => $this->t('$3'),
	'#default_value' => $4,
	${5:'#required' => TRUE,}
];
$0
endsnippet

snippet _form_item "Drupal Form API Item element" s
$form['$1'] = [
  '#type' => 'item',
	'#title' => $this->t('$2'),
	'#description' => $this->t('$3'),
];
$0
endsnippet

snippet _form_text_format "Drupal Form API text_format element" s
$${1:field_config_id} = $config->get('$1');
$form['$2'] = [
  '#type' => 'text_format',
	'#title' => $this->t('$3'),
	'#description' => $this->t('$4'),
	'#format' => $$1['format'] ?? filter_default_format(),
	'#default_value' => $$1['value'] ?? '',
	${5:'#required' => TRUE,}
];
$0
endsnippet

snippet _form_submit "Drupal Form API Submit element"
$form['$1'] = [
  '#type' => 'submit',
	'#value' => $this->t('$2'),
];
$0
endsnippet

snippet _form_check "Drupal Form API Checkbox element"
$form['$1'] = [
  '#type' => 'checkbox',
	'#title' => $this->t('$2'),
	'#description' => $this->t('$3'),
	'#default_value' => ${4:FALSE},
];
$0
endsnippet

snippet _form_select "Drupal Form API Select element"
$form['$1'] = [
  '#type' => 'select',
	'#title' => $this->t('$2'),
	'#description' => $this->t('$3'),
	'#default_value' => ${4:FALSE},
	'#options' => $5,
	${6:'#required' => TRUE,}
];
$0
endsnippet

snippet _form_radios "Drupal Form API Radios element"
$form['$1'] = [
  '#type' => 'radios',
	'#title' => $this->t('$2'),
	'#description' => $this->t('$3'),
	'#default_value' => ${4:FALSE},
	'#options' => $5,
	${6:'#required' => TRUE,}
];
$0
endsnippet

snippet _form_details "Drupal Form API Details element"
$form['$1'] = [
  '#type' => 'details',
	'#title' => $this->t('$2'),
	${3:'#open' => TRUE,}
];
$0
endsnippet

snippet _module_hook_update "Drupal hook update"
/**
 * ${1:Description of update.}
 */
function ${2:mymodule}_update_${3:8000}(&$sandbox) {
  $0
}
endsnippet

snippet _module_hook "Drupal hook"
/**
 * Implements hook_${1:hook}().
 */
function ${2:mymodule}_${3:hook}($4) {
  $0
}
endsnippet

snippet _module_func "Drupal module function"
/**
 * ${1:Description}
 */
function ${2:mymodule}_${3:function_name}($4) {
  $0
}
endsnippet

snippet _class_func "Drupal class function"
/**
 * ${1:{@inheritdoc}}
 */
${2:public} ${3:static }function $4($5) {
  $0
}
endsnippet

snippet _class_func_interface "Drupal class interface function"
/**
 * ${1:Description}
 */
${2:public} function $3($4);
endsnippet

snippet _class_const "Drupal class const"
/**
 * ${1:Description}.
 */
const $0
endsnippet

snippet _class_var "Drupal class protected var"
/**
 * ${1:Description}
 *
 * @var $2
 */
${3:protected} $4
endsnippet

snippet _class_var_entity_type_manager_interface "Drupal class EntityTypeManagerInterface"
/**
 * Entity type manager.
 *
 * @var \Drupal\Core\Entity\EntityTypeManagerInterface
 */
protected $entityTypeManager;
$0
endsnippet

snippet _class_var_config_factory_interface "Drupal class ConfigFactoryInterface"
/**
 * The config factory.
 *
 * @var \Drupal\Core\Config\ConfigFactoryInterface
 */
protected $configFactory;
$0
endsnippet

snippet _log "Drupal logger"
\Drupal::logger('$1')->${2:notice}($3);
endsnippet

snippet _logp "Drupal logger print_r"
\Drupal::logger('$1')->${2:notice}('<pre>' . print_r($3, TRUE) . '</pre>');
endsnippet

snippet _file_class_standard "Drupal class, standard"
<?php

namespace Drupal\\$1

/**
 * ${2:Class description.}
 */
class $3 {

  $0

}
endsnippet

snippet _file_class_interface "Drupal class interface"
<?php

namespace Drupal\\$1

/**
 * ${2:Interface.}
 */
interface $3Interface {

  $0

}
endsnippet

snippet _file_test_unit "Drupal Unit Test file template"
<?php

namespace Drupal\Tests\\$1

use Drupal\Tests\UnitTestCase;

/**
 * $2
 *
 * @group ${3:ua}
 * ${4:@coversDefaultClass \Drupal\ }
 */
class $5 extends UnitTestCase {

  /**
   * {@inheritdoc}
   */
  protected function setUp() {
    parent::setUp();
  }

  /**
	 * ${6:First test description}
	 */
	public function test${7:FirstTest}() {

	}

}
endsnippet

snippet _file_test_kernel "Drupal Kernel Test file template"
<?php

namespace Drupal\Tests\\$1\Kernel\\$2

use Drupal\KernelTests\KernelTestBase;

/**
 * $3
 *
 * @group ${4:ua}
 * ${5:@coversDefaultClass \Drupal\ }
 */
class $6 extends KernelTestBase {

  /**
   * {@inheritdoc}
   */
  public static $modules = [
    'system',
  ];

  /**
   * {@inheritdoc}
   */
  protected function setUp() {
    parent::setUp();
  }

  /**
   * ${7:First test description}
   */
  public function test${8:FirstTest}() {
    $9
  }

}
endsnippet

snippet _class_plugin_injection "Drupal plugin injection create / construct"
  /**
   * {@inheritdoc}
   */
  public function __construct(array $configuration, $plugin_id, $plugin_definition) {
    parent::__construct($configuration, $plugin_id, $plugin_definition);
  }

  /**
   * {@inheritdoc}
   */
  public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition) {
    return new static($configuration, $plugin_id, $plugin_definition);
  }
endsnippet
